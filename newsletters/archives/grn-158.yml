---
edition: "158"
pubdate: "feb 14th 2016"
editors: "xenor, tysliu"
participants: "Nauman Tariq, hsatac"
rant:
  author: mose
  content:
    "#### The thin line between chaos and harmony


In the long road of my developer life I had the chance to experience a very wide variety of organizational models. The most pleasant was in the context of very large open source projects, where actions are not planned but still organized, and things fall in their place seemingly naturally. Of course there is nothing natural in that. There is a category of people, that can be called catalysts, working as gardeners and building the pathways to collaboration. But because there is no predefined hierarchy, I thought chaos had some virtues.


In other hierarchical models, there is so much waste following the rule rather than its essence. It's like there was an abstraction layer for efficiency and the staff follows the abstraction, paying no respect to the efficiency. Because after a time the set of rules is not making sense anymore. The environment moves fast and habits are hard to change. It's taking long time for an organization to change its own internal rules.


But I also have seen non-hierarchical model totally fail. When you try to apply an open-source kind of organization inside a company, it cannot be done half-way, but it cannot be done fully. 


For example the volatility of contributors is an essential part of the open-source organization model. Things are working the way they do because people are free to leave and join at will, or stop working when they decide. This is totally different in a company, even if you can get some approximation, leaving and joining is a more complicated process, and has a different set of motivations. And let's not talk about the freedom to stop working at will.


This single factor leads the free-formed communities to get various incentives for contributors to feel good about their interaction in the community. The ones that don't play well along other people just end up either in a leadership position because they are geniuses, or just leave because they don't fit in. Or they stay and kill the project because everybody else leaves. But most likely they are the reason why forks exist.


But in a non-hierarchic company, those cowboys may end up hurting the whole process of collaboration by capturing some processes, getting very good at them, and give hell to everybody else for a time, under the privilege of the Power of the Bottleneck. It's very hard to get those people to share knowledge because their position depends on it. If nothing is done, the situation will become uneasy and awkward at best.


Certainly in that type of situation, if there is some power in place to mitigate this danger, all can be good and well. But from my experience such power is hard to come by. Especially if the non-hierarchic aspect of the organization depends on him/her/it. Maybe there is some way to have some kind of catalyst role, but where I have seen such role in a company, it was informal and not an official position. 


That's too bad because I would love to experience again some real collective intelligence in the workplace the same way I have experienced it in some open source communities. I think maybe there are some companies out there that are doing that well, but most of the time it's not going to be structural. Most likely it will come from a specific set of people that do real good in collaboration. I still wait to see a company that includes in its genetic code, in its fundamental principle, the seeds that make it possible to be efficient and still instinctive.
"

topics:

- title: Look
  baseline:
    "Examples of UI/UX, graphic performance, web design and flashy things."
  links:

  - title: "Love Notes"
    url: "https://spotify-valentines.com/"
    comment: "Send your Valentine a playlist with a secret message."
    tags:
      - design

- title: Use
  baseline:
    "Web applications, resources and tools, available for making our life easier or funnier."
  links:

  - title: "Beginner's Resources to Learn Programming Languages"
    url: "https://www.vodien.com/singapore-community/education/beginners-resources-to-learn-programming-languages.php"
    comment: "A good collection of links for web developers."
    tags:
      - tool

  - title: "JsTips"
    url: "http://getjs.tips"
    comment: "Mobile app that gives a JavaScript tip a day."
    tags:
      - js

- title: Install
  baseline: "A selection of gems or applications updated during past week."
  links:

  - title: "good-migrations"
    url: "https://github.com/testdouble/good-migrations"
    comment: "Prevent Rails from auto-loading app/ code when running database migrations."
    tags:
      - rb

  - title: "log_spy"
    url: "https://github.com/mz026/log_spy"
    comment: "A rack middleware sending request log to Amazon SQS."
    tags:
      - rb

  - title: "git-blame-someone-else"
    url: "https://github.com/jayphelps/git-blame-someone-else"
    comment: "Blame someone else for your bad code (joke)."
    tags:
      - rb

  - title: "HTTP::Accept"
    url: "https://github.com/ioquatix/http-accept"
    comment: "Provides a robust set of parsers for dealing with Accept and Accept-Language HTTP headers."
    tags:
      - rb

  - title: "Services"
    url: "https://github.com/krautcomputing/services"
    comment: "A nifty service layer for your Rails app."
    tags:
      - rb

  - title: "himawari.js"
    url: "https://github.com/jakiestfu/himawari.js"
    comment: "Download real-time images of Earth from the Himawari-8 satellite"
    tags:
      - js

  - title: "GrapesJS"
    url: "http://grapesjs.com"
    comment: "Next generation tool for building HTML templates without coding."
    tags:
      - html5

  - title: "Browsersync"
    url: "https://browsersync.io/"
    comment: "Time-saving synchronised browser testing."
    tags:
      - tool

  - title: "diff-so-fancy"
    url: "https://github.com/so-fancy/diff-so-fancy"
    comment: "Good-lookin' diffs with diff-highlight and more."
    tags:
      - tool

- title: Read
  baseline: "From the blogosphere or news feeds ..."
  links:

  - title: "Kill Your Dependencies"
    url: "http://www.mikeperham.com/2016/02/09/kill-your-dependencies"
    comment: "Some notes to app and gem developers on how not to add unneeded dependencies."
    pubdate: feb 9
    tags:
      - rb

  - title: "Build Your Next Web App 10x Faster with RapidAPI"
    url: "https://scotch.io/tutorials/build-your-next-web-app-10x-faster-with-rapidapi"
    comment: "RapidAPI is an online platform that lets you create a back end for your web or mobile app without writing a single line of code."
    pubdate: feb 9
    tags:
      - tool

  - title: "Language and Locale Matching in Go"
    url: "http://blog.golang.org/matchlang"
    comment: "How Go handles multilinguism."
    pubdate: feb 9
    tags:
      - go

  - title: "Introducing Dynamic Modules in NGINX 1.9.11"
    url: "https://www.nginx.com/blog/dynamic-modules-nginx-1-9-11/"
    comment: "NGINX version 1.9.11 introduces dynamic modules, separate shared object files that can optionally be loaded at runtime."
    pubdate: "feb 9"
    tags:
      - ops

  - title: "Do You Believe in Programming Magic?"
    url: "http://blog.codeship.com/programming-magic/"
    comment: "Too magical makes more complex."
    pubdate: "feb 10"
    tags:
      - rb

  - title: "Making Error Alerts Less Noisy and More Useful"
    url: "http://blog.honeybadger.io/how-to-make-your-error-alerts-less-noisy-and-more-useful/"
    comment: "The only thing that's worse is a real alarm sent to the wrong person."
    pubdate: feb 10
    tags:
      - rb

  - title: "Quick Tip: Master Closures by Reimplementing Them from Scratch"
    url: "http://www.sitepoint.com/quick-tip-master-closures-by-reimplementing-them-from-scratch/"
    comment: "In JavaScript, a function doesnâ€™t create a closure; the function is the closure."
    pubdate: feb 10
    tags:
      - js

  - title: "How to Build an SMS Appointment Reminder App with Twilio"
    url: "http://www.sitepoint.com/build-sms-appointment-reminder-app-with-twilio/"
    comment: "WUse Google Calendar to get appointments and then send the text message with Twilio."
    pubdate: feb 11
    tags:
      - js

  - title: "The future of loading CSS"
    url: "https://jakearchibald.com/2016/link-in-body"
    comment: "Chrome is intending to change the behaviour of _link_ in _body_, which allows for better ways to load CSS."
    pubdate: feb 11
    tags:
      - css3

  - title: "How to Use ARIA Effectively with HTML5"
    url: "http://www.sitepoint.com/how-to-use-aria-effectively-with-html5/"
    comment: "Accessible Rich Internet Applications. Don't forget about it."
    pubdate: feb 11
    tags:
      - web

  - title: "Google Challenges AWS Lambda with Cloud Functions"
    url: "http://thenewstack.io/google-cloud-functions-arrives-challenge-aws-lambda/"
    comment: "Create hooks between functions to trigger in Gmail and other Google offerings."
    pubdate: feb 11
    tags:
      - tool

  - title: "So you want to write a package manager"
    url: "https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527"
    comment: "Very long article splitting in part the hard work of writing a package management system."
    pubdate: "feb 12"
    tags:
      - go

  - title: "Open-sourcing Teletraan, a code deployment system"
    url: "https://engineering.pinterest.com/blog/open-sourcing-teletraan-code-deployment-system"
    comment: "Code deployment system built to deploy hundreds of services on thousands hosts."
    pubdate: "feb 12"
    tags:
      - ops
