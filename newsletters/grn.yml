---
edition: "155"
pubdate: "jan 24th 2016"
editors: "tysliu"
participants: "Nauman Tariq, xenor, hsatac, mickey, lincoln"
rant:
  author: mose
  content:
    "#### The future of under-engineering


Recently Marcelo told me, that's weird, how we do 10% research and specification, 40% implementation and 50% debugging in this industry. I'm more used to 70% research and specification, 20% implementation and 10% debugging. He was working in the hardware industry for a while, and just came to a service-based company. This is actually a very interesting remark and it reminded me when I was in my twenties when I was working as a construction worker.


When I was young there was no internet and I had a 10 years break from computers. I had to take stupid jobs like working on construction sites for low wages. After that I went to art school and later on I worked on building sets for business shows. I have been shocked by the gap between those 2 worlds. When building a house, there is so much time spent writing plans, thinking things in advance. While in the show-business construction pattern, it was mostly about improvisation and managing inflexible time constraints, with one-time-use construction.


I feel there is the same gap in the software industry. Well it's not exactly the same for sure, but the paradigm feels alike. In service software production, SaaS or ISP businesses, we tend to under-engineer the production. There are perfectly legitimate reasons for that, the life-cycle of a platform of service is quick, volatile and the value is not in the software asset but in the customer-user experience.


The Agile organization model reinforces this pattern, by providing a substitute to the early specifications, in the form of user experiences description. All this is fine and good. For a time. But with years passing we can see so many occurrences of 'temporary' projects becoming indestructible legacy monsters. It's like there was some kind of tipping point where the development should shift from under-engineered to well-engineered but it's rarely anticipated properly enough.


But it's pretty hard to address that kind of problem. Throwing away the early instances is very costly, especially when the organization is shaped by a fast-paced reactive production model. Introducing proper engineering at early stages is also not a clever option, as the product has to adapt to the service, which depends on a constant feedback loop with the users.


I have the feeling that there is something missing. Like an evolution of agile that could include seeds of later engineering. Some way to make possible to start fast, and evolve in a solid and slower model later on without crisis or disruption. This is the perspective that I think was missing in [that article][engineers] I cited on green ruby 145. But I don't know the answer to that problem. I suspect it will emerge by itself in the few next years.


[engineers]: http://www.businessinsider.com/why-computer-programmers-need-to-stop-calling-themselves-engineers-already-2015-11

"

topics:

- title: Look
  baseline:
    "Examples of UI/UX, graphic performance, web design and flashy things."
  links:

  - title: "Joho's"
    url: "http://johos.at/"
    comment: "Full-page video and audacious navigation."
    tags:
      - design

  - title: "2015 year in review"
    url: "http://yearinreview.co/"
    comment: "A Collection of 2015 Year in Review pages from around the world."
    tags:
      - design


- title: Use
  baseline:
    "Web applications, resources and tools, available for making our life easier or funnier."
  links:

  - title: "Ruby on Rails: Doctrine"
    url: "http://rubyonrails.org/doctrine/"
    comment: "Renewed Rails Manifesto by DHH."
    tags:
      - rb

  - title: "ES6-cheatsheet"
    url: "https://github.com/DrkSephy/es6-cheatsheet"
    comment: "Cheatsheet containing tips, tricks, best practices and code snippets."
    tags:
      - js

  - title: "AirBNB JavaScript Style Guide"
    url: "https://github.com/irfan/javascript"
    comment: "The AirBNB JavaScript Style Guide"
    tags:
      - js

  - title: "CssFilters"
    url: "http://www.cssFilters.co"
    comment: "Custom and Instagram like photo filters for CSS."
    tags:
      - css3

- title: Install
  baseline: "A selection of gems or applications updated during past week."
  links:

  - title: "Icersplicer"
    url: "https://github.com/puppetpies/icersplicer"
    comment: "Manipulate text files with Ruby."
    tags:
      - rb

  - title: "Solidus"
    url: "https://github.com/solidusio/solidus"
    comment: "Rails eCommerce System."
    tags:
      - rb

  - title: "It_sorts"
    url: "https://github.com/Masa331/it_sorts"
    comment: "Tiny helper lib for understandable array sorting."
    tags:
      - rb

  - title: "Chaltron"
    url: "https://github.com/vicvega/chaltron"
    comment: "Template generator for rails 4 application with bootstrap, devise..."
    tags:
      - rb

  - title: "devise_invitations"
    url: "https://github.com/RoxasShadow/devise_invitations"
    comment: "Allow multiple invitations on top of devise_invitable."
    tags:
      - rb

  - title: "torba"
    url: "https://github.com/torba-rb/torba"
    comment: "Bundler for Sprockets."
    tags:
      - rb

  - title: "Apex"
    url: "https://github.com/apex/apex"
    comment: "Minimal AWS Lambda function manager with Go support."
    tags:
      - go

  - title: "Kiex"
    url: "http://taylor.github.io/kiex/"
    comment: "Like rvm, but for elixir."
    tags:
      - el

  - title: "Objection.js"
    url: "https://github.com/Vincit/objection.js"
    comment: "An SQL-friendly ORM for Node.js"
    tags:
      - js

  - title: "Validator.js"
    url: "https://github.com/chriso/validator.js"
    comment: "String validation and sanitization."
    tags:
      - js

  - title: "Timelined"
    url: "https://github.com/andriussev/timelined"
    comment: "A customizable CSS-only vertical timeline."
    tags:
      - css3

  - title: "Sqlpp"
    url: "https://github.com/jamis/sqlpp"
    comment: "A simplistic SQL parser and pretty-printer."
    tags:
      - tool

- title: Read
  baseline: "From the blogosphere or news feeds ..."
  links:

  - title: "What's new in Ruby 2.3 Enumerable"
    url: "https://rossta.net/blog/whats-new-in-ruby-2-3-enumerable.html"
    comment: "Two new Enumerable instance methods were added, grep_v and chunk_while."
    pubdate: jan 18
    tags:
      - rb

  - title: "11 Ruby Tricks You Havenâ€™t Seen Before"
    url: "http://www.blackbytes.info/2016/01/ruby-tricks/"
    comment: "Well, maybe you knew about some of them, but maybe there is some easter egg here."
    pubdate: jan 18
    tags:
      - rb

  - title: "Implicit vs explicit type conversions in Ruby"
    url: "http://zverok.github.io/blog/2016-01-18-implicit-vs-expicit.html"
    comment: "to_h/to_hash and others."
    pubdate: jan 18
    tags:
      - rb

  - title: "Building a web framework from scratch in Elixir"
    url: "https://codewords.recurse.com/issues/five/building-a-web-framework-from-scratch-in-elixir"
    comment: "Using Plug directly to build our own framework from scratch."
    pubdate: jan 18
    tags:
      - el

  - title: "A Deep Dive into ES6 Classes"
    url: "http://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/"
    comment: "Inheritance, encapsulation, polymorphism and much more."
    pubdate: "jan 18"
    tags:
      - js

  - title: "Pointy Slider"
    url: "https://codyhouse.co/gem/pointy-slider/"
    comment: "Creating a slideshow with sliding-in panels that unveil new, fixed background images."
    pubdate: jan 18
    tags:
      - css3

  - title: "Introducing Apex"
    url: "https://medium.com/@tjholowaychuk/introducing-apex-800824ffaa70#.hfq1yrntk"
    comment: "Serverless architecture with AWS Lambda."
    pubdate: "jan 18"
    tags:
      - ops

  - title: "Next generation configuration mgmt"
    url: "https://ttboj.wordpress.com/2016/01/18/next-generation-configuration-mgmt/"
    comment: "A next generation configuration management prototype."
    pubdate: "jan 18"
    tags:
      - ops

  - title: "Skinny controllers through refactoring"
    url: "https://www.leighhalliday.com/skinny-controllers-through-refactoring"
    comment: "Controllers can get out of control. Their job should generally be quite simple."
    pubdate: jan 19
    tags:
      - rb

  - title: "New Rails identity"
    url: "http://weblog.rubyonrails.org/2016/1/19/new-rails-identity/"
    comment: "With Rails 5 just around the corner, we thought it was finally time for a fresh look for a new day."
    pubdate: jan 19
    tags:
      - rb

  - title: "The Beginner's Guide to Crafting Ruby Gems"
    url: "http://bamboolab.eu/blog/the-beginners-guide-to-crafting-ruby-gems"
    comment: "The simple steps of gems creation, in this example for a rails plugin."
    pubdate: jan 19
    tags:
      - rb

  - title: "The Easiest Way to Add Authentication to Any App"
    url: "https://scotch.io/tutorials/%E2%80%8Bthe-easiest-way-to-add-authentication-to-any-app"
    comment: "Don't feel like implementing authentication yourself? Try Auth0."
    pubdate: jan 19
    tags:
      - tool

  - title: "Patch and Protect Linux Kernel Zero Day Vulnerability"
    url: "http://www.cyberciti.biz/faq/linux-cve-2016-0728-0-day-local-privilege-escalation-vulnerability-fix/"
    comment: "CVE-2016-0728, A local privilege escalation vulnerability has existed since 2012."
    pubdate: jan 19
    tags:
      - ops

  - title: "Trends in Ruby - analyzing rubygems stats for 2015"
    url: "https://infinum.co/the-capsized-eight/articles/analyzing-rubygems-stats-v2015"
    comment: "Rubygems is the official package manager for Ruby and we decided to crunch up some stats for 2015 and see what's what."
    pubdate: jan 20
    tags:
      - rb

  - title: "OAuth 2 All the Things with oPRO: Customization"
    url: "http://www.sitepoint.com/oauth-2-all-the-things-with-opro-customization/"
    comment: "This is the third and the last part of this series of working with oPRO."
    pubdate: jan 21
    tags:
      - rb
